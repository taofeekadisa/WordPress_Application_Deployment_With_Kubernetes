apiVersion: apps/v1
kind: Deployment
metadata:
  name: wp-blog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wp-blog
  template:
    metadata:
      labels:
        app: wp-blog
    spec:
      containers:
      - name: wp-blog-nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
        - name: wp-persistent-storage
          mountPath: /var/www/html

      - name: wp-blog-php
        image: wordpress:fpm
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: wp-persistent-storage
          mountPath: /var/www/html
        env:
        - name: WORDPRESS_DB_HOST
          value: "<<SERVERNAME.mysql.database.azure.com>>" #Update here
        - name: WORDPRESS_DB_USER
          value: "<<YOUR-DATABASE-USERNAME>>"  #Update here
        - name: WORDPRESS_DB_PASSWORD
          value: "<<YOUR-DATABASE-PASSWORD>>"  #Update here
        - name: WORDPRESS_DB_NAME
          value: "<<flexibleserverdb>>"
        - name: WORDPRESS_CONFIG_EXTRA # enable SSL connection for MySQL
          value: | 
            define('MYSQL_CLIENT_FLAGS', MYSQLI_CLIENT_SSL);
      volumes:
      - name: config
        configMap:
          name: wp-nginx-config
          items:
          - key: config
            path: site.conf

      - name: wp-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - wp-blog
              topologyKey: "kubernetes.io/hostname"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  labels:
    app: wp-blog
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: blog-nginx-service
spec:
  type: LoadBalancer
  ports:
    - port: 80
  selector:
    app: wp-blog
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wp-nginx-config
data:
  config : |
    server {
         listen       80;
         server_name  localhost;
         root         /var/www/html/;

         access_log /var/log/nginx/wp-blog-access.log;
         error_log  /var/log/nginx/wp-blog-error.log error;
         index index.html index.htm index.php;

         
        location ~* .(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
           expires max;
           index index.php index.html index.htm;
           try_files $uri =404;
        }

        location / {
          index index.php index.html index.htm;
          
          if (-f $request_filename) {
            expires max;
            break;
          }
          
          if (!-e $request_filename) {
            rewrite ^(.+)$ /index.php?q=$1 last;
          }
        }

        location ~ \.php$ {
           fastcgi_split_path_info ^(.+\.php)(/.+)$;
           fastcgi_pass localhost:9000;
           fastcgi_index index.php;
           include fastcgi_params;
           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
           fastcgi_param SCRIPT_NAME $fastcgi_script_name;
           fastcgi_param PATH_INFO $fastcgi_path_info;
        }
      }